# define statusline as vim tmuxline script
##########################################
source ~/.tmuxline.conf

# define break-window and create window at version config
source ~/.tmux.version.conf
#########################################################

# keybindings
unbind-key C-b
set-option -g prefix C-a
bind a send-prefix

# switch to last pane
bind-key C-a select-pane -t :.+

# navigation
# no need again with vim-tmux-navigator
# bind k      selectp -U
# bind C-k    selectp -U
# bind j      selectp -D
# bind C-j    selectp -D
# bind h      selectp -L
# bind C-h    selectp -L
# bind l      selectp -R
# bind C-l    selectp -R
# bind \;     selectp -R

# move window
bind -r "<" swap-window -t -1
bind -r ">" swap-window -t +1
# move pane
unbind ,
bind-key ,  swap-pane -U
unbind x
bind x      swap-pane -U

# resize
bind -r H   resize-pane -L 8
bind -r J   resize-pane -D 4
bind -r K   resize-pane -U 4
bind -r L   resize-pane -R 8

unbind c
bind c new-window
bind-key -n F1 break-pane
bind-key -n F3 previous-window
bind-key -n F4 next-window
bind-key -n F5 source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind-key -n F6 detach
bind-key -n F7 copy-mode
bind-key -n F8 command-prompt -I "#W" "rename-window '%%'"

unbind s
bind-key s  choose-window "join-pane -v -s '%%'"
unbind v
bind-key v  choose-window "join-pane -h -s '%%'"

bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind * list-clients

# TODO: how to define C-Left or Shift-Left as key binding?

# config
set -g utf8 on
set-option -g status-utf8 on
setw -g mode-keys vi

set -g base-index 1
set -g pane-base-index 1

set -g set-titles-string '#T'
# set-window-option -g automatic-rename off

set -s escape-time 0
set -g display-time 1000
set -g repeat-time 1000
set -g status-keys vi

# set -g visual-activity on
setw -g monitor-activity on

set -g default-terminal "rxvt-unicode-256color"

set -g status-interval 1

# only shrink for small window
# invalid?
setw -g aggressive-resize on

set-option -g set-titles-string '#H:#S.#I.#P #W #T'

set-option -g history-limit 50000

# mouse config
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

set -g default-command "${SHELL}"

set -g bell-action any

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys 'C-l'
bind l send-keys 'C-l'

# open a temp pane
bind-key -n F9 splitw -v -c "#{pane_current_path}" -p 15
