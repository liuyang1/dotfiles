# base-files version 4.0-4
# ~/.bashrc: executed by bash(1) for interactive shells.

# The latest version as installed by the Cygwin Setup program can
# always be found at /etc/defaults/etc/skel/.bashrc

# Modifying /etc/skel/.bashrc directly will prevent
# setup from updating it.

# The copy in your home directory (~/.bashrc) is yours, please
# feel free to customise it to create a shell
# environment to your liking.  If you feel a change
# would be benificial to all, please feel free to send
# a patch to the cygwin mailing list.

# User dependent .bashrc file

# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

# Shell Options
#
# See man bash for more options...
#
# Don't wait for job termination notification
# set -o notify
#
# Don't use ^D to exit
# set -o ignoreeof
#
# Use case-insensitive filename globbing
# shopt -s nocaseglob
#
# Make bash append rather than overwrite the history on disk
# shopt -s histappend
#
# When changing directory small typos can be ignored by bash
# for example, cd /vr/lgo/apaache would find /var/log/apache
# shopt -s cdspell

# Completion options
#
# These completion tuning parameters change the default behavior of bash_completion:
#
# Define to access remotely checked-out files over passwordless ssh for CVS
# COMP_CVS_REMOTE=1
#
# Define to avoid stripping description in --option=description of './configure --help'
# COMP_CONFIGURE_HINTS=1
#
# Define to avoid flattening internal contents of tar files
# COMP_TAR_INTERNAL_PATHS=1
#
# Uncomment to turn on programmable completion enhancements.
# Any completions you add in ~/.bash_completion are sourced last.
# [[ -f /etc/bash_completion ]] && . /etc/bash_completion

# History Options
#
# Don't put duplicate lines in the history.
# export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
#
# Ignore some controlling instructions
# HISTIGNORE is a colon-delimited list of patterns which should be excluded.
# The '&' is a special pattern which suppresses duplicate entries.
# export HISTIGNORE=$'[ \t]*:&:[fb]g:exit'
# export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls' # Ignore the ls command as well
#
# Whenever displaying the prompt, write the previous line to disk
# export PROMPT_COMMAND="history -a"

# Aliases
#
# Some people use a different file for aliases
# if [ -f "${HOME}/.bash_aliases" ]; then
#   source "${HOME}/.bash_aliases"
# fi
#
# Some example alias instructions
# If these are enabled they will be used instead of any instructions
# they may mask.  For example, alias rm='rm -i' will mask the rm
# application.  To override the alias instruction use a \ before, ie
# \rm will call the real rm not the alias.
#
# Interactive operation...
 alias cp='cp -i'
#
# Default to human readable figures
alias df='df -h'
alias du='du -h'
#
# Misc :)
# alias less='less -r'                          # raw control characters
# alias whence='type -a'                        # where, of a sort
# alias grep='grep --color'                     # show differences in colour
# alias egrep='egrep --color=auto'              # show differences in colour
# alias fgrep='fgrep --color=auto'              # show differences in colour
#
# Some shortcuts for different directory listings
# alias ls='ls -hF --color=tty'                 # classify files in colour
# alias dir='ls --color=auto --format=vertical'
# alias vdir='ls --color=auto --format=long'
# alias ll='ls -l'                              # long list
# alias la='ls -A'                              # all but . and ..
# alias l='ls -CF'                              #

# Umask
#
# /etc/profile sets 022, removing write perms to group + others.
# Set a more restrictive umask: i.e. no exec perms for others:
# umask 027
# Paranoid: neither group nor others have any perms:
# umask 077

# Functions
#
# Some people use a different file for functions
# if [ -f "${HOME}/.bash_functions" ]; then
#   source "${HOME}/.bash_functions"
# fi
#
# Some example functions:
#
# a) function settitle
# settitle () 
# { 
#   echo -ne "\e]2;$@\a\e]1;$@\a"; 
# }
# 
# b) function cd_func
# This function defines a 'cd' replacement function capable of keeping, 
# displaying and accessing history of visited directories, up to 10 entries.
# To use it, uncomment it, source this file and try 'cd --'.
# acd_func 1.0.5, 10-nov-2004
# Petar Marinov, http:/geocities.com/h2428, this is public domain
# cd_func ()
# {
#   local x2 the_new_dir adir index
#   local -i cnt
# 
#   if [[ $1 ==  "--" ]]; then
#     dirs -v
#     return 0
#   fi
# 
#   the_new_dir=$1
#   [[ -z $1 ]] && the_new_dir=$HOME
# 
#   if [[ ${the_new_dir:0:1} == '-' ]]; then
#     #
#     # Extract dir N from dirs
#     index=${the_new_dir:1}
#     [[ -z $index ]] && index=1
#     adir=$(dirs +$index)
#     [[ -z $adir ]] && return 1
#     the_new_dir=$adir
#   fi
# 
#   #
#   # '~' has to be substituted by ${HOME}
#   [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}"
# 
#   #
#   # Now change to the new dir and add to the top of the stack
#   pushd "${the_new_dir}" > /dev/null
#   [[ $? -ne 0 ]] && return 1
#   the_new_dir=$(pwd)
# 
#   #
#   # Trim down everything beyond 11th entry
#   popd -n +11 2>/dev/null 1>/dev/null
# 
#   #
#   # Remove any other occurence of this dir, skipping the top of the stack
#   for ((cnt=1; cnt <= 10; cnt++)); do
#     x2=$(dirs +${cnt} 2>/dev/null)
#     [[ $? -ne 0 ]] && return 0
#     [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}"
#     if [[ "${x2}" == "${the_new_dir}" ]]; then
#       popd -n +$cnt 2>/dev/null 1>/dev/null
#       cnt=cnt-1
#     fi
#   done
# 
#   return 0
# }
# 
# alias cd=cd_func
alias less='/bin/less -r'
alias more='less'
alias '..'='cd ..'
alias '...'='cd ../..'
alias vi='vim'
alias e='vim'
alias ls='/bin/ls -hF --color=tty --show-control-chars --time-style=long-iso'
alias ll='ls -lh'
if hash colormake 2>/dev/null; then
    MAKE_CMD=colormake
else
    MAKE_CMD=color
fi
alias m='$MAKE_CMD'
alias mc='$MAKE_CMD clean'
alias mr='$MAKE_CMD run'
alias me='$MAKE_CMD edit'
alias mt='$MAKE_CMD test'
alias mtr='mtr --curses'
alias python3='/home/liuy/code/open/Python-3.3.0/python'
alias grep='grep --color'

#export LC_ALL=zh_CN.GB2312
#export LC_CTYPE=zh_CN.GB2312
#export LANG=zh_CN.GB2312
export LANG="en_US.UTF8"
export LC_ALL="en_US.UTF8"
export XMODIFIERS=@im=Chinput3
#export OUTPUT_CHARSET="GBK"

# myself
# black  fg 30
# red    fg 31
# green  fg 32
# yellow fg 33
# blue   fg 34
# pink   fg 35
# cyan   fg 36
# white  fg 37
BLACK='\e[0;30m'
RED='\[\e[0;31m\]'
GREEN='\[\e[0;32m\]'
ORANGE='\[\e[0;33m\]'
BLUE='\[\e[0;34m\]'
PINK='\[\e[0;35m\]'
WHITE='\[\e[0;37m\]'
BOLD='\[\e[1m\]'
REGULAR='\[\e[0m\]'
echo_face(){
	if [[ $? == 0 ]]
	then
		echo "${RED}0_0$DEFAULT"
	else
		echo "${GREEN}^_^$DEFAULT"
	fi
}
prompt_cmd(){
	if [[ $? -eq 0 ]]
	then
		lastval="(^_^)"
	else
		lastval="(>_<)"
	fi
pwd="$(echo -n $PWD| sed "s|$HOME|a|g")"
let promptlen=$(echo -n "--[$HOSTNAME:$pwd]-[0_0]" | wc -c | tr -d "")
#let promptlen=$(echo -n "-[1970-01-01 00:00:00]-[$HOSTNAME:$pwd]-[0_0]" | wc -c | tr -d "")
let fillsize=$COLUMNS-$promptlen
fillval=""
while [ $fillsize -gt 0 ]
do
	fillval="${fillval}─"
	let fillsize=$fillsize-1
done
# append to history
history -a
}
prompt_cmd2(){
    history -a
}
PROMPT_COMMAND=prompt_cmd2
FAKE_HOST=tobedefined
if [ -f ~/.fakehost ]; then
    . ~/.fakehost
fi
PS1="$REGULAR$BLUE┌[$RED$FAKE_HOST$REGULAR:$PINK\w$BLUE]\n$BLUE└$GREEN\u$BLUE-$WHITE☯$BLUE->$REGULAR"
#PS1="\n$REGULAR$BLUE┌[$RED\H$REGULAR:$PINK\w$BLUE]-$ORANGE\${lastval}$BLUE\${fillval}$RED[\D{%Y-%m-%d %H:%M:%S}$RED]$BLUE┐\n$BLUE└$GREEN\u$BLUE-$WHITE☯$BLUE->$REGULAR"
PS2="\[\e[31;1m\]  >> \[\e[m\]"
PS3="\[\e[31;1m\]??>> \[\e[m\]"

#function _update_powerline_ps1(){
	#export PS1="i\n$REGULAR$BLUE$RED[\H:\w]$BLUE-$ORANGE\${lastval}$BLUE\${fillval}$RED[\D{%Y-%m-%d %H:%M:%S}$RED]$BLUE \n$(~/bin/powerline-bash.py)"
	#export PS1="\n$REGULAR[$PINK\u$REGULAR@$GREEN\H] $PINK$(~/bin/powerline-bash.py)\n$WHITE☯$BLUE->$REGULAR"
#}
#export PROMPT_COMMAND="_update_powerline_ps1"
# \h    host(first until ".")
# \H    host all

# \d    day
# \D{format} format day
# \t    time 24Hour HH:MM:SS
# \T    time 12Hour HH:MM:SS
# \@    time 12Hour HH:MM am|pm
# \A    time 24Hour HH:MM

# \w    path
# \W    base path(last dir name)
# \#    number
# \!    history number
# \u    user

# \a    bell(0x07)
# \e    Esc(0x1b)

# \j    shell task number
# \l    shell terminal name
# \v    bash version

# \$    '$',for root "#"

# \[    begin non print
# \]    end non print


# black  bg 40
# red    bg 41
# green  bg 42
# yellow bg 44
# blue   bg 44
# pink   bg 45
# cyan   bg 46
# white  bg 47

# effect
# 0 default
# 1 light
# 2 darker
# 4 underline
# 5 blink
# 7 revsere
# 8 hidden
# 9 delete-line
# 22 non-bold
# 24 non-underline
# 25 non-blink
# 27 non-reverse

# monokai

set -o vi

# modify for zsh
#bind -m vi-insert "\C-l":clear-screen

#eval `dircolors -b`


export EDITOR='/usr/bin/vim'

export XMODIFIERS='@im=fcitx'

export PATH=~/.local/bin:$PATH
txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
badgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White
txtrst='\e[0m'    # Text Reset
print_before_the_prompt () {
	    printf "\n $txtred%s %s: $bldgrn%s $txtpur\n$txtrst" "$USER" "$PWD"
}
#PROMPT_COMMAND=print_before_the_prompt
#PS1='\u >> '
# export TERM=rxvt-unicode-256color

# make colorful MAN output
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;31m' # begin bold 
export LESS_TERMCAP_me=$'\E[0m' # end mode 
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode 
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin standout-odeinfobox 
export LESS_TERMCAP_ue=$'\E[0m' # end underline 
export LESS_TERMCAP_us=$'\E[01;32m' # begin underline

export ACE_ROOT=/home/liuy/tars/devel/ACE/ACE_wrappers

export CCACHE_DIR=/tmp/ccache

ulimit -c unlimited

# ignorespace ignoredups both
export HISTCONTROL=erasedups
export HISTSIZE=20000
export HISTIGNORE="pwd:ls:ll:histroy:exit:"
# 已经使用histroy -a实时写入,这个就没有必要了
# zsh not suported shopt
#shopt -s histappend

eval `dircolors ~/.dircolors`

export JAVA_HOME=/usr/lib/jvm/java-6-openjdk/
